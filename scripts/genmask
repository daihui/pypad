#!/usr/bin/env python

# THIS FILE IS PART OF PyPad, AND IS GOVERENED BY A PERMISSIBILITY LICENSE 
# GOVERNING ITS USE AND DISTRIBUTION. YOU SHOULD HAVE RECIEVED A COPY OF THIS
# LICENSE WITH THE SOFTWARE; IF NOT PROVIDED, WRITE TO <tjlane@stanford.edu>.
#
# AUTHORS:
# TJ Lane <tjlane@stanford.edu>
# Jonas Sellberg <jonas.a.sellberg@gmail.com
#
# Apr 30, 2013

"""
Generate a mask for the CSPad, via an interactive environment.
"""

import argparse
import numpy as np

from pypad import read
from pypad import mask

# parse
parser = argparse.ArgumentParser(description='''Generate a mask for the CSPad,
                                             via an interactive environment.''')

parser.add_argument('image', help='''An image to display, to aid masking. 
                                     Consider using a dark calibration.''')                                     
parser.add_argument('-o', '--output', default='my_mask.mask',
                    help='''The name of the file to write, containing the final 
                            mask. Default: my_mask.mask''')
parser.add_argument('-f', '--format', default='pypad', 
                    choices=['pypad', 'odin', 'cheetah'],
                    help='''The file format to write. Default: pypad.''')
parser.add_argument('-r', '--reload',
                    help='''Reload an old mask and continue working on it. Can 
                            be pypad (.mask) or cheetah (.h5) format.''')

args = parser.parse_args()

img = read.load_raw_image(args.image)

if args.reload:
    old_mask = mask.PadMask.load(args.reload)
else:
    old_mask = None
    
msk = mask.MaskGUI(img, mask=old_mask, filename=args.output, fmt=args.format)
